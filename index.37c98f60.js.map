{"mappings":"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","sources":["<anon>","src/index.ts"],"sourcesContent":["var $b4e14b6b8da86996$exports = {};\n/* scroll */ const $b4e14b6b8da86996$var$navEl = document.querySelector(\"nav\");\nconst $b4e14b6b8da86996$var$anchors = document.querySelectorAll(\"nav a:not([target=_blank])\");\nconst $b4e14b6b8da86996$var$anchoredElements = [\n    ...$b4e14b6b8da86996$var$anchors\n].map((anchor)=>{\n    const href = anchor.getAttribute(\"href\");\n    return document.querySelector(`${href}`);\n});\nconst $b4e14b6b8da86996$var$elementToNavAnchor = new Map($b4e14b6b8da86996$var$anchoredElements.map((element, index)=>[\n        element,\n        $b4e14b6b8da86996$var$anchors[index]\n    ]));\nlet $b4e14b6b8da86996$var$oldScroll = window.scrollY;\nlet $b4e14b6b8da86996$var$scrollDirectionDown = true;\nfunction $b4e14b6b8da86996$var$checkVisible(elm, threshold, mode) {\n    threshold = threshold || 0;\n    mode = mode || \"visible\";\n    const rect = elm.getBoundingClientRect();\n    const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n    const above = rect.bottom - threshold < 0;\n    const below = rect.top - viewHeight + threshold >= 0;\n    return mode === \"above\" ? above : mode === \"below\" ? below : !above && !below;\n}\nfunction $b4e14b6b8da86996$var$updateNavSelection(scrollingDown) {\n    const direction = scrollingDown ? -1 : 1;\n    const from = scrollingDown ? $b4e14b6b8da86996$var$anchors.length : -1;\n    const to = scrollingDown ? 0 : $b4e14b6b8da86996$var$anchors.length - 1;\n    let current = from;\n    let activeSet = false;\n    do {\n        current += direction;\n        const anchoredElement = $b4e14b6b8da86996$var$anchoredElements[current];\n        if (!anchoredElement) continue;\n        const visible = $b4e14b6b8da86996$var$checkVisible(anchoredElement, 150);\n        $b4e14b6b8da86996$var$elementToNavAnchor.get(anchoredElement).classList.toggle(\"active\", !activeSet && visible);\n        activeSet = activeSet || visible;\n    }while (current != to);\n}\nwindow.addEventListener(\"scroll\", ()=>{\n    $b4e14b6b8da86996$var$scrollDirectionDown = $b4e14b6b8da86996$var$oldScroll < window.scrollY;\n    $b4e14b6b8da86996$var$oldScroll = window.scrollY;\n    $b4e14b6b8da86996$var$updateNavSelection($b4e14b6b8da86996$var$scrollDirectionDown);\n});\n/* navigation */ const $b4e14b6b8da86996$var$navButton = document.querySelector(\".menu-toggle\");\n$b4e14b6b8da86996$var$navButton.addEventListener(\"click\", (event)=>{\n    $b4e14b6b8da86996$var$navButton.classList.toggle(\"open\");\n    $b4e14b6b8da86996$var$navEl.classList.toggle(\"open\");\n});\n$b4e14b6b8da86996$var$navEl?.addEventListener(\"click\", (event)=>{\n    if (!window.matchMedia(\"(max-width: 768px)\").matches) return;\n    if (event.target instanceof HTMLAnchorElement) {\n        $b4e14b6b8da86996$var$navButton.classList.remove(\"open\");\n        $b4e14b6b8da86996$var$navEl.classList.remove(\"open\");\n    }\n});\n/* accordion */ const $b4e14b6b8da86996$var$getActualHeight = (element)=>{\n    const style = window.getComputedStyle(element);\n    const margin = parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    return Math.ceil(element.offsetHeight + margin);\n};\ndocument.querySelectorAll(\"[data-role=expandable]\").forEach((expandable)=>{\n    const title = expandable.querySelector(\"[data-role=title]\");\n    const content = expandable.querySelector(\"[data-role=content]\");\n    const contentWrapper = document.createElement(\"div\");\n    contentWrapper.style.overflow = \"hidden\";\n    contentWrapper.style.transition = \"all 0.3s ease-in-out\";\n    contentWrapper.style.height = \"0\";\n    title.after(contentWrapper);\n    contentWrapper.append(content);\n    title?.addEventListener(\"click\", (event)=>{\n        const toOpen = !expandable.classList.contains(\"expanded\");\n        if (toOpen) {\n            const contentHeight = content.offsetHeight;\n            contentWrapper.style.height = contentHeight + \"px\";\n        } else contentWrapper.style.height = \"0\";\n        expandable.classList.toggle(\"expanded\");\n    });\n});\n/* read more */ document.querySelectorAll(\"[data-role=read_more]\").forEach((expandable)=>{\n    const buttonContainer = expandable.querySelector(\"[data-role=expand]\");\n    const parent = expandable.closest(\".article-section\");\n    buttonContainer?.addEventListener(\"click\", (event)=>{\n        const currentState = expandable.dataset.expandState;\n        if (currentState === \"open\") parent.scrollIntoView(true);\n        event.stopPropagation();\n        event.preventDefault();\n        expandable.dataset.expandState = currentState === \"closed\" ? \"open\" : \"closed\";\n    });\n});\n/* dialog */ const $b4e14b6b8da86996$var$dialog = document.querySelector(\"dialog.reference_dialog\");\ndocument.querySelector(\"[data-role=open_dialog]\").addEventListener(\"click\", (event)=>{\n    $b4e14b6b8da86996$var$dialog.showModal();\n});\ndocument.querySelector(\"dialog button\").addEventListener(\"click\", (event)=>{\n    $b4e14b6b8da86996$var$dialog.close();\n});\n\n\n//# sourceMappingURL=index.37c98f60.js.map\n","/* scroll */\nconst navEl = document.querySelector('nav');\nconst anchors = document.querySelectorAll('nav a:not([target=_blank])');\nconst anchoredElements = [...anchors].map(anchor => {\n    const href = anchor.getAttribute('href');\n    return document.querySelector(`${href}`);\n});\nconst elementToNavAnchor = new Map(anchoredElements.map((element, index) => [element, anchors[index]]));\nlet oldScroll = window.scrollY;\nlet scrollDirectionDown = true;\n\nfunction checkVisible(elm, threshold, mode) {\n    threshold = threshold || 0;\n    mode = mode || 'visible';\n    const rect = elm.getBoundingClientRect();\n    const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\n    const above = rect.bottom - threshold < 0;\n    const below = rect.top - viewHeight + threshold >= 0;\n    return mode === 'above' ? above : (mode === 'below' ? below : !above && !below);\n}\n\nfunction updateNavSelection(scrollingDown) {\n    const direction = scrollingDown ? -1 : 1;\n    const from = scrollingDown ? anchors.length : -1;\n    const to = scrollingDown ? 0 : anchors.length - 1;\n    let current = from;\n    let activeSet = false;\n\n    do  {\n        current += direction;\n        const anchoredElement = anchoredElements[current];\n        if (!anchoredElement) {\n            continue;\n        }\n        const visible = checkVisible(anchoredElement, 150);\n        elementToNavAnchor.get(anchoredElement).classList.toggle('active', !activeSet && visible);\n        activeSet = activeSet || visible;\n    } while (current != to);\n}\nwindow.addEventListener('scroll', () => {\n    scrollDirectionDown = oldScroll < window.scrollY;\n    oldScroll = window.scrollY;\n    updateNavSelection(scrollDirectionDown);\n});\n\n\n/* navigation */\nconst navButton = document.querySelector('.menu-toggle');\nnavButton.addEventListener('click', (event) => {\n    navButton.classList.toggle('open');\n    navEl.classList.toggle('open');\n});\nnavEl?.addEventListener('click', (event) => {\n    if (!window.matchMedia(\"(max-width: 768px)\").matches) {\n        return;\n    }\n    if (event.target instanceof HTMLAnchorElement) {\n        navButton.classList.remove('open');\n        navEl.classList.remove('open');\n    }\n});\n\n/* accordion */\n\nconst getActualHeight = (element) => {\n    const style = window.getComputedStyle(element);\n    const margin = parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    return Math.ceil(element.offsetHeight + margin);\n}\n\ndocument.querySelectorAll('[data-role=expandable]').forEach(expandable => {\n    const title = expandable.querySelector('[data-role=title]');\n    const content = expandable.querySelector('[data-role=content]');\n    const contentWrapper = document.createElement('div');\n    contentWrapper.style.overflow = 'hidden';\n    contentWrapper.style.transition = 'all 0.3s ease-in-out';\n    contentWrapper.style.height = '0';\n    title.after(contentWrapper);\n    contentWrapper.append(content);\n\n    title?.addEventListener('click', (event) => {\n        const toOpen = !expandable.classList.contains('expanded');\n        if (toOpen) {\n            const contentHeight = content.offsetHeight;\n            contentWrapper.style.height = contentHeight + 'px';\n        } else {\n            contentWrapper.style.height = '0';\n        }\n        expandable.classList.toggle('expanded');\n    });\n\n});\n\n\n/* read more */\ndocument.querySelectorAll('[data-role=read_more]').forEach(expandable => {\n    const buttonContainer = expandable.querySelector('[data-role=expand]');\n    const parent = expandable.closest('.article-section');\n    buttonContainer?.addEventListener('click', event => {\n        const currentState = expandable.dataset.expandState;\n        if (currentState === 'open') {\n            parent.scrollIntoView(true);\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        expandable.dataset.expandState = currentState === 'closed' ? 'open' : 'closed';\n    });\n});\n\n/* dialog */\nconst dialog = document.querySelector('dialog.reference_dialog');\ndocument.querySelector('[data-role=open_dialog]').addEventListener('click', event => {\n    dialog.showModal();\n});\n\ndocument.querySelector('dialog button').addEventListener('click', event => {\n    dialog.close();\n});\n"],"names":["$b4e14b6b8da86996$var$navEl","document","querySelector","$b4e14b6b8da86996$var$anchors","querySelectorAll","$b4e14b6b8da86996$var$anchoredElements","map","anchor","href","getAttribute","$b4e14b6b8da86996$var$elementToNavAnchor","Map","element","index","$b4e14b6b8da86996$var$oldScroll","window","scrollY","$b4e14b6b8da86996$var$scrollDirectionDown","addEventListener","$b4e14b6b8da86996$var$updateNavSelection","scrollingDown","direction","from","length","to","current","activeSet","anchoredElement","visible","$b4e14b6b8da86996$var$checkVisible","elm","threshold","mode","rect","getBoundingClientRect","viewHeight","Math","max","documentElement","clientHeight","innerHeight","above","bottom","below","top","get","classList","toggle","$b4e14b6b8da86996$var$navButton","event","matchMedia","matches","target","HTMLAnchorElement","remove","forEach","expandable","title","content","contentWrapper","createElement","style","overflow","transition","height","after","append","toOpen","contains","contentHeight","offsetHeight","buttonContainer","parent","closest","currentState","dataset","expandState","scrollIntoView","stopPropagation","preventDefault","$b4e14b6b8da86996$var$dialog","showModal","close"],"version":3,"file":"index.37c98f60.js.map"}